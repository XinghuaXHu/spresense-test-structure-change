###############################################################################
#
#      File Name: dmp_layout.conf
#
#      Description: Dump layout sample configuration file (ruby script)
#
#      Notes: (C) Copyright 2012,2015 Sony Corporation
#
#      Author: Satoru AIZAWA
#
###############################################################################

# ダンプ領域の先頭につけるログ名称。ASCII 8byte固定
LogName = "Dump_Spu"

# ダンプライブラリのバージョン。ASCII 4byte固定
LibVer = "2.00"

# ユーザー定義定数は、"U_"で始まる英大文字・数字の名称とすること
# "U_DMP_"で始まる名称で定義すると、dmp_id.hにdefineマクロとしても出力される


#    ID:        ダンププールIDの名称を、"DMP_"で開始する文字列で指定する。
#               ダンプIDヘッダファイルに、対応するマクロが生成される。
#               以下は、予約済みのため使用禁止。
#               "DMP_LOG_NAME", "DMP_LIB_VER","DMP_INFO", "DMP_TOP", "DMP_END"
#
#   enable:     このエントリの有効/無効を指定する。
#               無効にすると、以下の項目は無視され、ダンプ領域は確保されない。
#               またLogDaemonへのログ出力も行われない。
#               ただし、対応するマクロ群は、空または無効値の定義で生成される。
#
#               コマンドラインのenable_IDsオプションで指定されたIDの場合は、本項目の
#               設定は無視されて、強制的に有効とする。
#
#   bytes:      プールの各要素のバイト数。4の倍数の値を指定すること。
#               ダンプ領域を確保せず、LogDaemonへの出力のみ行う場合も指定が必要。
#
#   num:        プールの要素数。1以上の値を指定すること。
#               ダンプ領域を確保せず、LogDaemonへの出力のみ行う場合は、0を指定する
#
#   pri:        優先度。この値未満の優先度の要求は無視され、LogDaemonへのログ出力
#               も行われない。
#               また、優先度未満のダンプ用マクロは、空の定義で生成される。
#
#               優先度の目安を下記に示すが、実際の割付けは自由に決めて良い。
#               ただし、第三者検証向けリリースでは1以上、正式リリースでは
#               2以上の値を指定することを強く推奨する。
#
#               0: Debug       (処理の通過やパラメタなど文字通りのデバッグ用)
#               1: Information (キーとなるメッセージの受信などの一般的な情報)
#               2: Notice      (流量制限の発生などの通知情報)
#               3: Warning     (警告やフルストップの発生などの重要な通知情報)
#               4: Error       (エラー情報)
#
#   mode:       ダンプモード。下記のいずれかを指定する。
#               通常は1を指定する。
#               ダンプ領域を確保せず、LogDaemonへの出力のみ行う場合は、0を指定する
#
#               0: シーケンシャルダンプ。num数分ダンプを行うとダンプを停止する。
#               1: シーケンシャルダンプ(ラップモード)。
#                  num数分のダンプを行うと先頭にラップしてダンプを継続する。
#               2: Index指定ダンプ。指定Index(0〜num-1)へダンプを行う。
#
#   sem:        ダンプ時にセマフォによるロックを行うか否かを指定する。
#               通常はfalseを指定する。trueにすると実行時間が増加する。
#               複数タスクで同一IDへダンプする必要がある場合のみtrueを指定する。
#               割込みハンドラからダンプを行う場合は、falseを指定する必要がある。
#               ダンプ領域を確保せず、LogDaemonへの出力のみ行う場合は、falseを指定する
#
#   cache:      ダンプ毎にキャッシュをライトバックするか否かを指定する。
#               通常はfalseを指定する。trueにすると実行時間が増加する。
#               ダンプ領域を確保せず、LogDaemonへの出力のみ行う場合は、falseを指定する
#
#   time:       ダンプの先頭に挿入する時間情報のサイズを指定する。
#               0(時間情報なし), 4(32bit), 8(64bit)のいずれかを指定すること。
#               0以外を指定すると必要メモリ量と実行時間が増加する。
#               ダンプ領域を確保せず、LogDaemonへの出力のみ行う場合は、0を指定する
#
#   sign:       LogDaemonで使用される識別用サイン(ASCIIの英数字字4byteまたは空文字列)。
#               ログストリームの解析時に利用される。
#               基本的には、プール毎に一意のサインを指定すること。
#               共有可能なサイン"AscZ"を指定するとASCIIZログと解釈される。
#               空文字列を指定すると、LogDaemonへのログ出力は行わない。
#               ログ出力は、ダンプよりも負荷の高い処理なので、必要なプールのみ指定すること。
#               DMP_LOG_DAEMONとDMP_TRACEには、サインを指定してはならない。

DumpPool = [
# [ ID,			enable,	bytes,	num,	pri,	mode,	sem,	cache,	time,	sign]
  ["DMP_ASSERT_INFO",	false,	512,	2,	2,	0,	false,	false,	4,	""],
  ["DMP_MSG_SEQ2",	false,	16,	128,	1,	0,	false,	false,	4,	""],
  nil # end of user definition
] # end of DumpPool

require "dmp_layout.rb"
