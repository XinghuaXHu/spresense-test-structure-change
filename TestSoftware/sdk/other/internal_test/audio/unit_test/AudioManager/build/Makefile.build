#====================================================================#
# 
#       File Name: Makefile
#       
#       Description: 
#           This is Makefile on CppUTest exe.
# 
#       Notes: (C) Copyright 2015 Sony Corporation
# 
#       Author: Tetsuya Sakai
# 
#====================================================================#
#--------------------------------------------------------------------#
# Configuration File Definition
#--------------------------------------------------------------------#
TOP_DIR		= ..

BASE_CONFIG	= $(TOP_DIR)/Config/base_config.mk

#------------------------------------------------#
# These files must do include first.
# Do in order of BASE_CONFIG, MAKE_CONFIG, and PATHS.
#------------------------------------------------#
include $(BASE_CONFIG)
include $(MAKE_CONFIG)
include $(PATHS)

#--------------------------------------------------------------------#
# File Information
#--------------------------------------------------------------------#
#------------------------------------------------#
# Source files/Object files
#------------------------------------------------#
#AUDIO_MANAGER_DIR	= $(ROOT_DIR)/audio/manager
AUDIO_MANAGER_DIR	= ../src
AUDIO_MANAGER_SRCS	= audio_manager.cpp
TEST_CXX_SRCS		= test_cpputest.cpp

STUB_CXX_SRCS = baseband_config_stb.cpp MemMgr.cpp MsgLib.cpp audio_sram_ctrl.cpp
STUB_C_SRCS   = pm.c system.c player.c recorder.c sound_effect.c recognition.c audio_io_config.c assertion.c module_stb.c aca_drv_api_stb.c

INC_DIR_LIST  = -I$(ROOT_DIR)/include \
                -I$(ROOT_DIR)/SDK/include \
                -I$(ROOT_DIR)/audio/drivers/apu \
                -I$(ROOT_DIR)/audio/apus/include \
                -I$(ROOT_DIR)/audio/drivers/baseband/include \
                -I$(ROOT_DIR)/audio/common/chateau/lib/MemMgrLite/1.00/include 
#                -I$(ROOT_DIR)/audio/manager 
#                -I$(ROOT_DIR)/audio/common/chateau/include \
#                -I$(ROOT_DIR)/audio/common \
#                -I$(ROOT_DIR)/audio/common/include \
#                -I$(ROOT_DIR)/audio/common/chateau/lib/Message/2.02/include \
#                    -DUNUSE_SPINLOCK_MANAGER \
#                    -I$(ROOT_DIR)/audio/common/chateau/lib/Message/2.02/include \
#                    -I$(ROOT_DIR)/audio/common/chateau/lib/util/InterCpuLock/1.00/include \

TEST_OBJS		= $(TEST_CXX_SRCS:.cpp=.o) \
				  $(STUB_CXX_SRCS:.cpp=.o) \
				  $(STUB_C_SRCS:.c=.o) \
				  $(AUDIO_MANAGER_SRCS:.cpp=.o)

TEST_SRCS		= $(addprefix $(SRC_TEST_DIR)/, $(TEST_CXX_SRCS)) \
				  $(addprefix $(SRC_DIR)/, $(STUB_CXX_SRCS)) \
				  $(addprefix $(SRC_DIR)/, $(STUB_C_SRCS)) \
				  $(addprefix $(AUDIO_MANAGER_DIR)/, $(AUDIO_MANAGER_SRCS))

DEFS			+= -DENABLE_FLASH_BOOT #-DCHIP_NAME_SPRITZER_ES

#------------------------------------------------#
# etc.
#------------------------------------------------#
MAKEFILE	= Makefile

#--------------------------------------------------------------------#
# Directory information
#--------------------------------------------------------------------#
#------------------------------------------------#
# VPATH
#------------------------------------------------#
VPATH 		= $(SRC_DIR) $(SRC_TEST_DIR)

#--------------------------------------------------------------------#
# Library/Driver information
#--------------------------------------------------------------------#
LIBS		= $(USER_LIB_ARC) \
		  $(CPPUTEST_LIB_ARC)

#------------------------------------------------#
# Command Option
#------------------------------------------------#
CFLAGS		= $(DEFS) $(COPT) $(DOPT) \
		  -I$(INC_TEST_COMMON_DIR) \
		  $(INC_DIR_LIST) 

CXXFLAGS	= $(DEFS) $(CXXOPT) $(DOPT) \
		  -I$(INC_TEST_COMMON_DIR) \
		  $(INC_DIR_LIST) 

LDFLAGS		= $(LDOPT)

#--------------------------------------------------------------------#
# Make Target
#--------------------------------------------------------------------#
all:	$(TEST_EXE)

$(CPPUTEST_LIB_ARC) :
	@echo "#### Build CppUTest Archives ####"
	make -C $(CPPUTEST_DIR)

$(TEST_EXE) : $(TEST_OBJS) $(LIBS)
	@echo "#### Build UserCode ####"
	$(CXX) $(LDFLAGS) -o $@ $(TEST_OBJS) $(LIBS)

#------------------------------------------------#
# Target clean
#------------------------------------------------#
clean allclean:
	$(RM) $(TEST_EXE) $(TEST_OBJS)
	$(RM) .depend
ifeq ($(MAKECMDGOALS),allclean)
endif

#------------------------------------------------#
# other
#------------------------------------------------#
.PHONY: all libs clean allclean

.depend:  \
	 $(TEST_SRCS) $(MAKE_CONFIG) $(MAKEFILE) $(LIBS)
	$(CXX) $(CXXFLAGS) -M $(TEST_SRCS) > $@


#--------------------------------------------------------------------#
# Do the include of these files at the last.
#--------------------------------------------------------------------#
include $(RULES)
ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
include .depend
endif

